searchState.loadedDescShard("nd_async_rusqlite", 0, "The request was aborted for some reason.\nAn access panicked.\nAn async rusqlite connection.\nA builder for an <code>AsyncConnection</code>.\nThe library error type\nThe WalPool attempted to put the database into WAL mode, …\nA rusqlite error\nInspired by …\nA handle to a pool of connections, designed for a database …\nA builder for a <code>WalPool</code>.\nAccess the database.\nOpen the connection from a blocking context.\nGet a builder for an <code>AsyncConnection</code>.\nGet a builder for a <code>WalPool</code>.\nClose the database.\nClose the pool.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume this object to access the inner item.\nMake a new <code>WalPoolBuilder</code>.\nCreate an <code>AsyncConnectionBuilder</code> with default settings.\nSet the number of read connections.\nThe number of read connections\nOpen the pool.\nOpen the connection.\nAccess the database with a reader connection.\nAdd a function to be called when a reader connection …\nA function to be called to initialize each reader.\nAccess the database with a writer connection.\nAdd a function to be called when the writer connection …\nA function to be called to initialize the writer.")